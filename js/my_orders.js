// JavaScript –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –º–æ–∏—Ö –∑–∞–∫–∞–∑–æ–≤ (my_orders.html)

let currentUser = null;
let orderStatuses = {};

// –°–ª–æ–≤–∞—Ä—å –ø–µ—Ä–µ–≤–æ–¥–æ–≤ —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫
const statusTranslations = {
    // –ê–Ω–≥–ª–∏–π—Å–∫–∏–µ —Å—Ç–∞—Ç—É—Å—ã
    'pending_review': '–û–∂–∏–¥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏',
    'confirmed': '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω',
    'processing': '–í –æ–±—Ä–∞–±–æ—Ç–∫–µ',
    'purchased': '–ö—É–ø–ª–µ–Ω',
    'warehouse': '–ù–∞ —Å–∫–ª–∞–¥–µ',
    'shipped': '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω',
    'delivered': '–î–æ—Å—Ç–∞–≤–ª–µ–Ω',
    'canceled': '–û—Ç–º–µ–Ω–µ–Ω',
    'cancelled': '–û—Ç–º–µ–Ω–µ–Ω',
    'pending': '–û–∂–∏–¥–∞–µ—Ç',
    'approved': '–û–¥–æ–±—Ä–µ–Ω',
    'rejected': '–û—Ç–∫–ª–æ–Ω–µ–Ω',
    'in_transit': '–í –ø—É—Ç–∏',
    'out_for_delivery': '–î–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è',
    'returned': '–í–æ–∑–≤—Ä–∞—â–µ–Ω',
    'refunded': '–í–æ–∑–º–µ—â–µ–Ω',
    'in_progress': '–í —Ä–∞–±–æ—Ç–µ',
    'ready': '–ì–æ—Ç–æ–≤',
    'completed': '–ó–∞–≤–µ—Ä—à–µ–Ω',
    'on_hold': '–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω',
    'awaiting_payment': '–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã',
    'payment_confirmed': '–û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞',
    'quality_check': '–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞',
    'packaging': '–£–ø–∞–∫–æ–≤–∫–∞',
    'customs': '–¢–∞–º–æ–∂–Ω—è',
    
    // –†—É—Å—Å–∫–∏–µ —Å—Ç–∞—Ç—É—Å—ã (–Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –æ–Ω–∏ —É–∂–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º)
    '–û–∂–∏–¥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏': '–û–∂–∏–¥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏',
    '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω': '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω',
    '–í –æ–±—Ä–∞–±–æ—Ç–∫–µ': '–í –æ–±—Ä–∞–±–æ—Ç–∫–µ',
    '–ö—É–ø–ª–µ–Ω': '–ö—É–ø–ª–µ–Ω',
    '–ù–∞ —Å–∫–ª–∞–¥–µ': '–ù–∞ —Å–∫–ª–∞–¥–µ',
    '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω': '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω',
    '–î–æ—Å—Ç–∞–≤–ª–µ–Ω': '–î–æ—Å—Ç–∞–≤–ª–µ–Ω',
    '–û—Ç–º–µ–Ω–µ–Ω': '–û—Ç–º–µ–Ω–µ–Ω'
};

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä—É—Å—Å–∫–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
function getStatusInRussian(status) {
    if (!status) return '–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω';
    return statusTranslations[status] || status;
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–∫–∞–∑–æ–≤
async function loadOrderStatuses() {
  console.log('üìã –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–∫–∞–∑–æ–≤...');
  
  try {
    const response = await fetch('http://localhost:5000/api/orders/statuses');
    const data = await response.json();
    
    if (data.status === 'success') {
      orderStatuses = data.statuses;
      console.log('‚úÖ –°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', orderStatuses);
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç—É—Å–æ–≤:', data.message);
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç—É—Å–æ–≤:', error);
  }
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function loadUserOrders() {
  if (!currentUser) {
    console.error('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω');
    return;
  }
  
  console.log('üì¶ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', currentUser.id);
  
  const container = document.getElementById('ordersContainer');
  if (container) {
    container.innerHTML = '<div class="loading">–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–∫–∞–∑–æ–≤...</div>';
  }

  try {
    console.log(`–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ API: http://localhost:5000/api/orders/user/${currentUser.id}`);
    const response = await fetch(`http://localhost:5000/api/orders/user/${currentUser.id}?t=${Date.now()}`);
    console.log('–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç API, —Å—Ç–∞—Ç—É—Å:', response.status);
    const data = await response.json();
    console.log('–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', data);

    if (data.status === 'success') {
      console.log('–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', data.orders);
      displayOrders(data.orders);
      console.log('‚úÖ –ó–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', data.orders.length);
    } else {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤:', data.message);
      showError(data.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤');
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤:', error);
    showError('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω.');
  }
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤
function displayOrders(orders) {
  const container = document.getElementById('ordersContainer');
  if (!container) {
    console.error('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∑–∞–∫–∞–∑–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }

  console.log('–û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∑–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', orders);
  console.log('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è:', orders.length);

  if (orders.length === 0) {
    console.log('–ù–µ—Ç –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è');
    container.innerHTML = `
      <div class="empty-state">
        <h3>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤</h3>
        <p>–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑, —á—Ç–æ–±—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –µ–≥–æ —Å—Ç–∞—Ç—É—Å</p>
        <button class="refresh-btn" onclick="navigateTo('order')">
          üìù –°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑
        </button>
      </div>
    `;
    return;
  }

  console.log('–°–æ–∑–¥–∞–Ω–∏–µ HTML –¥–ª—è –∑–∞–∫–∞–∑–æ–≤');
  const ordersHTML = orders.map(order => {
    console.log('–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è –∑–∞–∫–∞–∑–∞:', order);
    return createOrderCard(order);
  }).join('');
  
  console.log('–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π HTML:', ordersHTML);
  container.innerHTML = ordersHTML;
  console.log('–ó–∞–∫–∞–∑—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã');
}

// Function to create order card
function createOrderCard(order) {
    const statusInfo = orderStatuses[order.status] || { name: order.status, color: '#666' };
    
    // Form HTML for items
    let itemsHTML = '';
    if (order.items && order.items.length > 0) {
        itemsHTML = `
            <div class="items-list">
                <h4>üì¶ –¢–æ–≤–∞—Ä—ã (${order.items.length})</h4>
                ${order.items.map((item, index) => `
                    <div class="item-card">
                        <div class="item-header">
                            <div class="item-name">–¢–æ–≤–∞—Ä ${index + 1}</div>
                            ${item.link_or_id ? `<a href="${item.link_or_id}" class="item-link" target="_blank">üîó –°—Å—ã–ª–∫–∞</a>` : ''}
                        </div>
                        <div class="item-details">
                            ${item.color ? `<div><strong>–¶–≤–µ—Ç:</strong> ${item.color}</div>` : ''}
                            ${item.size ? `<div><strong>–†–∞–∑–º–µ—Ä:</strong> ${item.size}</div>` : ''}
                            <div><strong>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</strong> ${item.quantity || 1}</div>
                            ${item.price ? `<div><strong>–¶–µ–Ω–∞:</strong> ${item.price} ¬•</div>` : ''}
                            ${item.comment ? `<div><strong>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</strong> ${item.comment}</div>` : ''}
                        </div>
                        ${item.photos && item.photos.length > 0 ? `
                            <div class="item-photos">
                                <strong>–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ (${item.photos.length}):</strong>
                                <div style="display: flex; flex-wrap: wrap; gap: 15px; margin-top: 10px;">
                                    ${item.photos.map((photo, photoIndex) => `
                                        <div style="position: relative; display: inline-block;">
                                            <img src="${photo}" alt="–§–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ ${photoIndex + 1}" 
                                                 style="width: 100px; height: 100px; object-fit: cover; border-radius: 8px; border: 2px solid #00DBFF; cursor: pointer;"
                                                 onclick="window.open('${photo}', '_blank')">
                                            <div style="position: absolute; top: 5px; right: 5px; background: rgba(0,0,0,0.7); color: white; border-radius: 50%; width: 20px; height: 20px; display: flex; align-items: center; justify-content: center; font-size: 12px;">
                                                ${photoIndex + 1}
                                            </div>
                                        </div>
                                    `).join('')}
                                </div>
                            </div>
                        ` : '<div><em>–§–æ—Ç–æ –Ω–µ –ø—Ä–∏–ª–æ–∂–µ–Ω—ã</em></div>'}
                    </div>
                `).join('')}
            </div>
        `;
    } else {
        itemsHTML = '<div class="empty-state"><p>–¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p></div>';
    }
    
    // Get number of items and photos
    const itemsCount = order.total_items || (order.items && order.items.length) || 0;
    const photosCount = order.total_photos || (order.items ? order.items.reduce((sum, item) => sum + (item.photos ? item.photos.length : 0), 0) : 0);
    
    return `
        <div class="order-card" style="--status-color: ${statusInfo.color}">
            <div class="order-header">
                <div class="order-id-section">
                    <div class="order-id">${order.order_number ? `–ó–∞–∫–∞–∑ #${order.order_number}` : `–ó–∞–∫–∞–∑ #${order.id}`}</div>
                    ${order.order_number ? `<div style="font-size: 12px; color: #666; margin-top: 2px;">ID –≤ —Å–∏—Å—Ç–µ–º–µ: ${order.id}</div>` : ''}
                </div>
                <div class="order-date">${formatDate(order.created_at)}</div>
                <div class="order-status" style="color: ${statusInfo.color}">
                    ${getStatusInRussian(order.status)}
                </div>
            </div>
            
            <div class="order-details">
                <div class="detail-item">
                    <div class="detail-label">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</div>
                    <div class="detail-value">${order.full_name || order.telegram_username || '–ù–µ —É–∫–∞–∑–∞–Ω'}</div>
                </div>
                <div class="detail-item">
                    <div class="detail-label">–°—Ç—Ä–∞–Ω–∞</div>
                    <div class="detail-value">${order.country === 'china' ? '–ö–∏—Ç–∞–π' : order.country === 'japan' ? '–Ø–ø–æ–Ω–∏—è' : '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}</div>
                </div>
                <div class="detail-item">
                    <div class="detail-label">–¢–æ–≤–∞—Ä–æ–≤</div>
                    <div class="detail-value">${itemsCount}</div>
                </div>
                <div class="detail-item">
                    <div class="detail-label">–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π</div>
                    <div class="detail-value">${photosCount}</div>
                </div>
            </div>
            
            ${itemsHTML}
            
            ${order.tracking_number ? `
                <div class="tracking-info">
                    <strong>–¢—Ä–µ–∫-–Ω–æ–º–µ—Ä:</strong> 
                    <span class="tracking-number">${order.tracking_number}</span>
                </div>
            ` : ''}
            
            <!-- –§–æ—Ç–æ–æ—Ç—á–µ—Ç —Å–æ —Å–∫–ª–∞–¥–∞ -->
            ${order.photo_reports && order.photo_reports.length > 0 ? `
                <div class="photo-reports-section">
                    <h4>üì∑ –§–æ—Ç–æ–æ—Ç—á–µ—Ç —Å–æ —Å–∫–ª–∞–¥–∞</h4>
                    <div class="photo-reports-container">
                        ${order.photo_reports.map((report, reportIndex) => `
                            <div class="photo-report" style="margin-bottom: 15px; padding: 10px; background: rgba(255,255,255,0.05); border-radius: 8px;">
                                <div style="font-size: 12px; color: #888; margin-bottom: 10px;">
                                    ${new Date(report.timestamp || order.status_updated_at).toLocaleString('ru-RU')}
                                </div>
                                <div style="display: flex; flex-wrap: wrap; gap: 10px;">
                                    ${report.photos ? report.photos.map((photo, photoIndex) => `
                                        <div style="position: relative; display: inline-block;">
                                            <img src="${photo}" alt="–§–æ—Ç–æ–æ—Ç—á–µ—Ç ${reportIndex + 1}-${photoIndex + 1}" 
                                                 style="width: 120px; height: 120px; object-fit: cover; border-radius: 8px; border: 2px solid #2ECC71; cursor: pointer;"
                                                 onclick="openPhotoModal('${photo}')">
                                            <div style="position: absolute; top: 5px; right: 5px; background: rgba(46,204,113,0.8); color: white; border-radius: 50%; width: 22px; height: 22px; display: flex; align-items: center; justify-content: center; font-size: 12px; font-weight: bold;">
                                                ${photoIndex + 1}
                                            </div>
                                        </div>
                                    `).join('') : ''}
                                </div>
                                ${report.comment ? `<div style="margin-top: 8px; font-style: italic; color: #ccc;">${report.comment}</div>` : ''}
                            </div>
                        `).join('')}
                    </div>
                </div>
            ` : ''}
            
            <!-- –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ -->
            ${order.manager_comments && order.manager_comments.length > 0 ? `
                <div class="manager-comments">
                    <h4>üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞</h4>
                    ${order.manager_comments.slice(-3).map(comment => `
                        <div class="manager-comment" style="background: rgba(0,219,255,0.1); padding: 10px; border-radius: 8px; margin-bottom: 8px; border-left: 3px solid #00DBFF;">
                            <div style="font-size: 12px; color: #888; margin-bottom: 5px;">
                                ${new Date(comment.timestamp).toLocaleString('ru-RU')}
                            </div>
                            <div>${comment.comment}</div>
                        </div>
                    `).join('')}
                    ${order.manager_comments.length > 3 ? `<div style="font-size: 12px; color: #888; text-align: center; margin-top: 5px;">–∏ –µ—â–µ ${order.manager_comments.length - 3} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤...</div>` : ''}
                </div>
            ` : ''}
            
            ${order.notes ? `
                <div class="detail-item">
                    <div class="detail-label">–ü—Ä–∏–º–µ—á–∞–Ω–∏—è</div>
                    <div class="detail-value">${order.notes}</div>
                </div>
            ` : ''}
        </div>
    `;
}

// –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã
function formatDate(dateString) {
  if (!dateString) return '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
  
  try {
    const date = new Date(dateString);
    return date.toLocaleString('ru-RU');
  } catch (error) {
    return dateString;
  }
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –æ—à–∏–±–∫–∏
function showError(message) {
  const container = document.getElementById('ordersContainer');
  if (container) {
    container.innerHTML = `
      <div class="error-state">
        <h3>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h3>
        <p>${message}</p>
        <button class="refresh-btn" onclick="loadUserOrders()">
          üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
        </button>
      </div>
    `;
  }
}

// –§—É–Ω–∫—Ü–∏—è —Ä—É—á–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
async function refreshOrders() {
  console.log('üîÑ –†—É—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤...');
  await loadUserOrders();
}

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–æ–π
window.refreshOrders = refreshOrders;

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
function displayUserInfo(user) {
  const userInfoElement = document.getElementById('userInfo');
  if (userInfoElement) {
    userInfoElement.innerHTML = `
      <div class="user-card">
        <h3>üë§ ${user.first_name} ${user.last_name || ''}</h3>
        <p>@${user.username || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
      </div>
    `;
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∑–∞–∫–∞–∑–æ–≤
async function initMyOrdersPage() {
  console.log('üì¶ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –º–æ–∏—Ö –∑–∞–∫–∞–∑–æ–≤');
  
  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  currentUser = getTelegramUser();
  
  if (currentUser) {
    displayUserInfo(currentUser);
    console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', currentUser);
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç—É—Å—ã –∏ –∑–∞–∫–∞–∑—ã
    await loadOrderStatuses();
    await loadUserOrders();
  } else {
    showError('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –æ—Ç–∫—Ä—ã–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram.');
  }
  
  console.log('‚úÖ My orders page initialized');
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–æ—Ç–æ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
function openPhotoModal(photoUrl) {
    const modalHTML = `
        <div id="photoModal" class="photo-modal" style="display: flex;" onclick="closePhotoModal()">
            <div class="photo-modal-content" onclick="event.stopPropagation()">
                <div class="photo-modal-header">
                    <button class="photo-close-btn" onclick="closePhotoModal()">&times;</button>
                </div>
                <div class="photo-modal-body">
                    <img src="${photoUrl}" alt="–§–æ—Ç–æ–æ—Ç—á–µ—Ç" id="modalPhoto">
                </div>
                <div class="photo-modal-footer">
                    <button onclick="closePhotoModal()" class="photo-close-button">–ó–∞–∫—Ä—ã—Ç—å</button>
                </div>
            </div>
        </div>
    `;
    document.body.insertAdjacentHTML('beforeend', modalHTML);
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function closePhotoModal() {
    const modal = document.getElementById('photoModal');
    if (modal) {
        modal.remove();
    }
}

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏
window.openPhotoModal = openPhotoModal;
window.closePhotoModal = closePhotoModal;

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', initMyOrdersPage);

console.log('‚úÖ My_orders.js loaded');